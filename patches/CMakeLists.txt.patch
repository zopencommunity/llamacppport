diff --git a/ggml/src/ggml-cpu/CMakeLists.txt b/ggml/src/ggml-cpu/CMakeLists.txt
index 66a5ad8d..f71c7dec 100644
--- a/ggml/src/ggml-cpu/CMakeLists.txt
+++ b/ggml/src/ggml-cpu/CMakeLists.txt
@@ -51,7 +51,7 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
 
     target_compile_features(${GGML_CPU_NAME} PRIVATE c_std_11 cxx_std_17)
     target_include_directories(${GGML_CPU_NAME} PRIVATE . ggml-cpu)
-
+    list(APPEND ARCH_FLAGS -fzvector -m64 -march=z15)
     if (APPLE AND GGML_ACCELERATE)
         find_library(ACCELERATE_FRAMEWORK Accelerate)
         if (ACCELERATE_FRAMEWORK)
@@ -94,7 +94,7 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
         target_compile_definitions(${GGML_CPU_NAME} PRIVATE GGML_USE_CPU_HBM)
 
         target_link_libraries(${GGML_CPU_NAME} PUBLIC memkind)
-    endif()
+   endif()
 
     if (GGML_SYSTEM_ARCH STREQUAL "ARM")
         message(STATUS "ARM detected")
@@ -463,11 +463,10 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
             message(WARNING "Unknown target. If you are compiling for z14 and earlier, you might have to add -DGGML_VXE=OFF.")
             list(APPEND ARCH_FLAGS -march=native -mtune=native)
         endif()
-
         if (GGML_VXE)
             message(STATUS "VX/VXE/VXE2 enabled")
             list(APPEND ARCH_FLAGS -mvx -mzvector)
-            list(APPEND ARCH_DEFINITIONS GGML_VXE)
+	    list(APPEND ARCH_DEFINITIONS GGML_VXE)
         endif()
 
         if (GGML_NNPA)
@@ -480,6 +479,17 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
     else()
         message(WARNING "Unknown CPU architecture. Falling back to generic implementations.")
         list(APPEND ARCH_FLAGS -DGGML_CPU_GENERIC)
+	list(APPEND ARCH_DEFINITIONS GGML_VXE)
+	message(STATUS "Added GGML_VXE Flag")
+	if(NOT DEFINED TARGET_ARCH)
+  	  set(TARGET_ARCH 13)
+	endif()
+	if(TARGET_ARCH GREATER 13)
+  	  target_compile_options(${GGML_CPU_NAME} PRIVATE "-qarch=${TARGET_ARCH}")
+	endif()
+	target_include_directories(${GGML_CPU_NAME} PRIVATE /usr/include)
+	target_link_libraries(${GGML_CPU_NAME} PRIVATE "/usr/lpp/cbclib/lib/libmass.arch${TARGET_ARCH}.a")
+	message(STATUS "Found MASS: /usr/lpp/cbclib/lib/libmass.arch${TARGET_ARCH}.a")
     endif()
 
     if (GGML_CPU_REPACK)
