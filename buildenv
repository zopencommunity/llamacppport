# bump: llamacpp-version /LLAMACPP_VERSION="(.*)"/ gitrefs:https://github.com/ggerganov/llama.cpp.git|re:/b([\d]{4})/|semver:*|/1\d00$/
LLAMACPP_VERSION="1600"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_DEPS="zoslib make cmake"
export ZOPEN_STABLE_URL="https://github.com/ggerganov/llama.cpp/archive/refs/tags/b${LLAMACPP_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="zoslib make cmake curl gzip"
export ZOPEN_DEV_URL="https://github.com/ggerganov/llama.cpp.git"
export ZOPEN_DEV_DEPS="zoslib make cmake"
export ZOPEN_CATEGORIES="ai"
export ZOPEN_DEV_TAG="master-9e232f0"
export ZOPEN_NAME="llamacpp"
export ZOPEN_RUNTIME_DEPS="ncurses"

rm -f "llama"
ln -s "llama.cpp" "llama"
ln -s "llama.cpp" $ZOPEN_NAME

export ZOPEN_COMP="CLANG"

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build --install-prefix \"\$ZOPEN_INSTALL_DIR/\" ."

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS --config Release"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

# Needs more testing
if false; then
  export ZOPEN_EXTRA_CPPFLAGS="-DGGML_USE_OPENBLAS -I /home/itodoro/projects/openblas/openblas/include/openblas -mvx -mzvector -march=z15"
  export ZOPEN_EXTRA_LIBS="/home/itodoro/projects/openblas/openblas/libopenblas.x"
fi

export ZOPEN_CHECK="skip"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_env()
{
  # echo envars outside of PATH, MANPATH, LIBPATH
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  echo "b$LLAMACPP_VERSION"
}
